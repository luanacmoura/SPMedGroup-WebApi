// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPMedGroup.WebApi.Context;

namespace SPMedGroup.WebApi.Migrations
{
    [DbContext(typeof(SPMedGroupContext))]
    [Migration("20190308141731_Criacao-Banco")]
    partial class CriacaoBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.AreaClinicaDomain", b =>
                {
                    b.Property<int>("AreaClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaClinicaNome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("AreaClinicaId");

                    b.ToTable("Area_Clinica");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.ClinicaDomain", b =>
                {
                    b.Property<int>("ClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<string>("ClinicaNome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Razao_Social")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("ClinicaId");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Clinica");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.ConsultaDomain", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataConsulta");

                    b.Property<int>("MedicoId");

                    b.Property<int>("ProntuarioPacienteId");

                    b.Property<string>("StatusConsulta")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("ConsultaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("ProntuarioPacienteId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.EnderecoPacientesDomain", b =>
                {
                    b.Property<int>("EnderecoPacienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<long>("CEP")
                        .HasColumnType("bigint");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("EnderecoPacienteId");

                    b.ToTable("Enderecos_Pacientes");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.MedicoDomain", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaClinicaId");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("char(32)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("char(11)");

                    b.Property<int>("UsuarioId");

                    b.HasKey("MedicoId");

                    b.HasIndex("AreaClinicaId");

                    b.HasIndex("CRM")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.ProntuarioPacientesDomain", b =>
                {
                    b.Property<int>("ProntuarioPacienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("char(11)");

                    b.Property<DateTime>("Data_Nasc");

                    b.Property<int>("EnderecoPacienteId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("Telefone")
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("char(11)");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ProntuarioPacienteId");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("EnderecoPacienteId");

                    b.HasIndex("RG")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prontuario_Pacientes");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.TipoUsuariosDomain", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoUsuarioNome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("Tipo_Usuarios");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.UsuarioDomain", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("char(32)")
                        .HasMaxLength(10);

                    b.Property<int>("TipoUsuarioId");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.ConsultaDomain", b =>
                {
                    b.HasOne("SPMedGroup.WebApi.Domains.MedicoDomain", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SPMedGroup.WebApi.Domains.ProntuarioPacientesDomain", "paciente")
                        .WithMany()
                        .HasForeignKey("ProntuarioPacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.MedicoDomain", b =>
                {
                    b.HasOne("SPMedGroup.WebApi.Domains.AreaClinicaDomain", "AreaClinica")
                        .WithMany()
                        .HasForeignKey("AreaClinicaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SPMedGroup.WebApi.Domains.UsuarioDomain", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.ProntuarioPacientesDomain", b =>
                {
                    b.HasOne("SPMedGroup.WebApi.Domains.EnderecoPacientesDomain", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoPacienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SPMedGroup.WebApi.Domains.UsuarioDomain", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SPMedGroup.WebApi.Domains.UsuarioDomain", b =>
                {
                    b.HasOne("SPMedGroup.WebApi.Domains.TipoUsuariosDomain", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
